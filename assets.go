// Code generated by go-bindata.
// sources:
// assets/template/email.txt
// assets/template/grunt.html
// assets/template/header.html
// assets/template/help.html
// assets/template/job.html
// assets/template/jobs.html
// assets/template/service.html
// assets/template/services.html
// README.md
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateEmailTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xc1\x6a\x83\x40\x10\x86\xef\xf3\x14\x73\xf0\xd0\x42\xa3\x77\xa1\xb7\xa4\x90\xd2\x52\xa8\xc9\x03\xac\x71\xd4\xb5\xba\x2b\xeb\x6c\xa0\x0c\xf3\xee\x45\x6b\x12\xd2\xde\x76\xff\xfd\xfe\x9d\x8f\x39\xf8\x1c\x45\x52\xf6\xaa\x50\xc4\xb2\xa3\x13\xe7\xf8\x49\x53\xec\x79\x42\x5f\xcf\x6f\x9d\x2f\xd3\x9d\xab\x46\x6f\x1d\xab\x02\xec\xd1\x0c\xc8\x2d\x21\x0d\xc6\xf6\x58\xfb\xb0\xdc\x9a\x10\x1d\x63\xe7\xcb\xff\x1d\x7c\x58\xa3\xe3\x71\xbf\x55\x7d\x4c\x01\x5e\x7d\x89\x5b\x62\x63\xfb\x09\x4d\x20\x6c\x29\x50\x8e\x2d\xf3\x98\x67\x99\x48\x7a\xf2\xae\xb6\x4d\x5a\x50\x38\x53\x50\xcd\x3a\x5f\x66\x77\x9f\x00\x88\x24\xbf\x14\xe6\xcf\xb8\x16\x54\x45\x92\x18\x6d\xb5\x64\x37\x5a\x24\x18\xd7\x10\x26\x5f\xf4\xfd\x84\xc9\xd9\xf4\x91\xae\xc8\x8b\xed\xe9\xdd\x8c\xaa\x30\x9f\x50\x64\xa6\x54\x71\xb3\xb9\x09\x25\x7f\x85\x02\x4d\xbc\x5a\x2d\x03\x55\xb3\xda\xf6\x94\x5d\xda\x20\x42\xae\x9a\x3d\x0f\x2d\x2d\x6b\x99\xd8\x04\xa6\x0a\x0d\x5f\x36\x54\xcc\xc9\xc1\x0e\xa4\x7a\xa5\x6a\xeb\xec\xd4\xde\x61\x3b\x57\xad\x10\xbc\xf9\x26\x87\x35\xfe\x88\x3c\x46\x4e\x0b\x0e\xd6\x35\xaa\xf0\x13\x00\x00\xff\xff\x0f\x40\xe2\xe8\xcb\x01\x00\x00")

func templateEmailTxtBytes() ([]byte, error) {
	return bindataRead(
		_templateEmailTxt,
		"template/email.txt",
	)
}

func templateEmailTxt() (*asset, error) {
	bytes, err := templateEmailTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/email.txt", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateGruntHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x52\xc1\x6e\xd5\x30\x10\xbc\xf7\x2b\x16\x9f\xa9\x97\x50\x89\x43\xe5\xe4\x02\x88\x23\x1c\xb8\x70\x74\x9c\xe5\xc5\xc1\xb1\x83\x77\x5f\xda\xa7\xaa\xff\x8e\x1c\x27\xad\xa8\xe8\x81\x53\x66\x26\xa3\xd9\xd5\x8e\xcd\x9b\x4f\x5f\x3f\x7e\xff\xf1\xed\x33\x8c\x32\x87\xee\xca\xd4\x0f\x80\x19\xc9\x0e\x05\x00\x18\xf1\x12\xa8\x3b\xe5\x73\x14\x83\x95\xd4\x1f\x33\x89\x85\x68\x67\x6a\xd5\xea\xe9\x6e\x49\x59\x14\xb8\x14\x85\xa2\xb4\xea\xce\x0f\x32\xb6\x03\xad\xde\xd1\xf5\x46\xde\x82\x8f\x5e\xbc\x0d\xd7\xec\x6c\xa0\xb6\x51\x7b\x50\xf0\xf1\x17\x64\x0a\xad\x62\xb9\x04\xe2\x91\x48\x14\x8c\x99\x7e\xb6\x6a\x14\x59\x6e\x11\x67\x7b\xef\x86\xa8\xfb\x94\x84\x25\xdb\xa5\x10\x97\x66\x7c\x12\xf0\x46\xdf\xe8\x0f\xe8\x98\x9f\x35\x3d\xfb\xa8\x1d\xf3\x31\x87\x5d\xf6\x8b\x00\x67\x57\x73\xf9\x16\xd1\x4e\xf6\x5e\x9f\x52\x3a\x05\xb2\x8b\xe7\x2d\xb4\x68\x18\x7c\xcf\x38\xfd\x3e\x53\xbe\x60\xa3\x9b\xf7\xfa\xdd\xce\xb6\xd4\x89\x55\x67\xb0\x06\xbe\x92\xfe\x1f\x5b\x4f\x2f\x97\x7e\x19\x6f\xf0\x28\xc4\xf4\x69\xb8\xd4\x89\x0f\x0f\x20\x34\x2f\xc1\x0a\x81\x3a\xd0\x66\xa4\xac\x4b\x93\x0a\x34\x3c\x3e\xd6\xed\x06\xbf\x82\x0b\x96\xb9\x55\xa5\x22\xeb\x23\xe5\xfd\x2e\xa5\xee\xa6\xfb\x52\x0b\x1e\x9b\x67\x31\xe3\x13\xb6\x47\x1d\x14\x96\x9a\xdd\x15\x68\xd0\x76\xa6\xff\x87\x8f\x29\x97\xe2\x79\xf7\x1e\xf4\x55\xff\x94\xfa\xc3\x9b\xcf\x31\xfa\x78\x82\x22\xfd\xed\x37\x38\xf8\xb5\x9e\xa3\x5e\xc1\x60\x7d\xb0\x57\x7f\x02\x00\x00\xff\xff\xdf\x23\x4e\x77\xc9\x02\x00\x00")

func templateGruntHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateGruntHtml,
		"template/grunt.html",
	)
}

func templateGruntHtml() (*asset, error) {
	bytes, err := templateGruntHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/grunt.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHeaderHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x52\xbb\x8e\xdc\x30\x0c\xec\xef\x2b\x18\xa5\x56\x8c\xf4\xb2\x8b\x34\xf9\x81\xfc\x00\x65\xd1\x5a\x05\x5c\x4a\xd0\xc3\xb8\xfd\xfb\x40\x67\xd9\x58\x2c\x70\x48\x75\x85\x61\x72\x3c\x33\x1c\xd0\x34\x82\x3b\xac\x8c\xa5\xcc\x4a\x70\xb7\x98\xe1\x78\x69\x47\x1b\x36\xae\x6a\x79\x03\x30\x2e\x5c\xac\x35\x4a\xc5\x20\x94\xf5\xc6\x2d\xb8\x8f\xef\x00\xe6\x9b\xd6\xf0\x2b\xa3\x38\xe8\x4f\x8d\xde\x33\x81\xa7\x0a\x3e\xc7\x96\xc8\xc1\x16\x33\x58\xaa\x95\x32\xdc\xa3\x0d\x4c\xe0\x42\x49\x8c\x0f\xd0\x7a\x78\x3c\x4d\x19\x21\x6e\x84\x8e\xf2\x98\x01\x60\x6c\xab\x35\x0a\xd4\x47\xa2\x59\x1d\x8d\x7a\x91\x8c\xd1\x6b\x64\xc6\x54\xc8\x29\x70\x58\x71\xc0\x3d\xfe\x81\x9f\x30\x66\x4f\x75\x56\xdf\x6d\xd1\xf4\x8e\xf7\xc4\xa4\x87\xd1\xc9\xd4\x3f\x15\x60\x0e\xa8\xe9\x3d\xa1\x38\x72\xb3\xda\x90\x0b\x5d\xa9\x00\x4c\x49\x28\x67\x8e\x92\x75\x14\x7e\xa8\xe5\xcf\x91\x44\x70\x0f\x1e\x6b\x88\x62\xa6\xce\xfb\x44\x16\xd6\x28\xda\x62\x56\xcb\x57\xd2\xcc\x74\x6c\xed\xea\xf1\x65\x7d\xb6\xff\x43\x05\xb7\x4c\xdb\xac\x26\x9f\x9b\xd4\x1f\xb7\x7a\x67\xb5\xfc\xee\xb5\x99\xf0\x92\x36\x7e\xd2\x9e\x67\x23\xb8\x3f\x2f\x86\xc3\x62\xf0\x74\x2b\x94\xf7\xb0\x52\x19\x86\x67\xdb\x3d\xcd\xc4\xe1\x33\xd9\xdf\x68\x4f\x49\x6e\x22\x41\x3c\x74\xe8\x7f\xb2\x1b\x71\x1a\xb2\x5e\xbe\xd2\xcd\xd4\x78\xdc\xdd\xe4\xc2\xfe\x71\xe6\x47\x61\x26\xc1\x7d\x79\xfb\x17\x00\x00\xff\xff\x34\x29\x6e\x6d\x1b\x03\x00\x00")

func templateHeaderHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateHeaderHtml,
		"template/header.html",
	)
}

func templateHeaderHtml() (*asset, error) {
	bytes, err := templateHeaderHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/header.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHelpHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x92\x31\x6f\x22\x31\x10\x85\x7b\x7e\xc5\x9c\xeb\xc3\x3e\x0e\xe9\x0a\xe4\xa5\xb9\xa4\x4e\x8a\x34\x29\x8d\x77\xc2\xce\xc6\x6b\x6f\x3c\xc3\x02\x42\xfc\xf7\x68\xd7\x40\x24\xa4\x14\xa9\x3c\xf3\x3c\xfa\xde\xc8\xcf\xf6\xd7\xc3\xd3\xff\x97\xd7\xe7\x47\x68\xa4\x0b\xeb\x99\x2d\x07\x80\x6d\xd0\xd5\x63\x01\x60\x85\x24\xe0\x7a\x9b\x77\x51\xa0\xc1\xd0\x5b\x53\x94\x72\xdb\xa1\x38\x88\xae\xc3\x4a\x0d\x84\xfb\x3e\x65\x51\xe0\x53\x14\x8c\x52\xa9\x3d\xd5\xd2\x54\x35\x0e\xe4\x71\x3e\x35\xbf\x81\x22\x09\xb9\x30\x67\xef\x02\x56\x0b\x75\x01\x05\x8a\xef\x90\x31\x54\x8a\xe5\x18\x90\x1b\x44\x51\xd0\x64\x7c\xab\x54\x23\xd2\xaf\x8c\xe9\xdc\xc1\xd7\x51\x6f\x52\x12\x96\xec\xfa\xb1\xf1\xa9\x33\x37\xc1\x2c\xf5\x52\xff\x33\x9e\xf9\x4b\xd3\x1d\x45\xed\x99\xaf\x3e\xec\x33\xf5\x02\x9c\x7d\xe1\xf2\xca\x18\xd7\xba\x83\xde\xa6\xb4\x0d\xe8\x7a\xe2\x09\x3a\x6a\x26\xd0\x86\x4d\xfb\xb1\xc3\x7c\x34\x0b\xbd\xf8\xab\xff\x5c\xba\x89\xda\xb2\x5a\x5b\x53\x80\xdf\xd0\x7f\xb0\x75\x7b\xbf\xf4\x3d\xde\x9a\x6b\x2a\x76\x93\xea\x63\x71\x3c\x9d\x40\xb0\xeb\x83\x13\x04\x75\xad\xa6\x41\xcc\x7a\x8c\x53\x81\x86\xf3\xb9\x6c\x57\xd3\x00\x3e\x38\xe6\x4a\x8d\x11\x39\x8a\x98\x2f\xef\x32\x91\xf4\x98\xef\x6d\xda\xd4\x34\x14\xdf\x62\x67\x4d\xf9\x1e\xb3\xd9\x67\x00\x00\x00\xff\xff\x79\x0b\xfd\x9c\x38\x02\x00\x00")

func templateHelpHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateHelpHtml,
		"template/help.html",
	)
}

func templateHelpHtml() (*asset, error) {
	bytes, err := templateHelpHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/help.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateJobHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x96\xcd\x6e\xe3\x36\x10\xc7\xef\xfb\x14\x53\x22\xc7\xb5\xd8\xd4\x45\xb1\x08\x28\x5d\x76\xb7\x45\x8b\x2d\x36\x40\xbb\x87\xe6\x46\x8b\x63\x8b\x0e\x45\xaa\xe4\xc8\x8e\x2b\xe8\xdd\x0b\x8a\x52\x2c\x3b\x1f\x4d\x72\xea\x45\xe6\x0c\x87\xc3\x1f\x39\xff\x21\x2c\xbe\xfb\xf4\xf5\xe3\x9f\x7f\x5d\x7f\x86\x8a\x6a\x53\xbc\x13\xe9\x07\x40\x54\x28\x55\x1c\x00\x08\xd2\x64\xb0\xd8\xf8\xd6\x12\x74\x5d\xb6\x75\xab\xec\xdb\xb7\x5f\x3f\xf5\xbd\xe0\x69\x2a\x85\xd5\x48\x12\xca\x4a\xfa\x80\x94\xb3\x96\xd6\x8b\x0f\x6c\x3e\x65\x65\x8d\x39\xdb\x69\xdc\x37\xce\x13\x83\xd2\x59\x42\x4b\x39\xdb\x6b\x45\x55\xae\x70\xa7\x4b\x5c\x0c\xc6\x7b\xd0\x56\x93\x96\x66\x11\x4a\x69\x30\xbf\x9c\x12\x19\x6d\x6f\xc1\xa3\xc9\x59\xa0\x83\xc1\x50\x21\x12\x83\xca\xe3\x3a\x67\x15\x51\x73\xc5\x79\x2d\xef\x4a\x65\xb3\x95\x73\x14\xc8\xcb\x26\x1a\xa5\xab\xf9\xbd\x83\x2f\xb3\x65\xf6\x13\x2f\x43\x38\xfa\xb2\x5a\xdb\xac\x0c\x61\xda\x27\x94\x5e\x37\x04\xc1\x97\x29\x6f\xb8\xe2\x5c\x6e\xe5\x5d\xb6\x71\x6e\x63\x50\x36\x3a\x0c\x49\xa3\x8f\x1b\xbd\x0a\x7c\xfb\x77\x8b\xfe\xc0\x2f\xb3\xcb\x1f\xb2\xef\x47\x6b\xc8\xba\x0d\xac\x10\x3c\x25\x7c\x22\xfb\x2b\xa8\xb7\xe7\xd0\xe7\xe9\x05\x9f\x2a\x27\x56\x4e\x1d\xd2\x8e\x5d\x07\x84\x75\x63\x24\x21\xb0\x69\x34\x04\xa2\xcf\x62\xc9\x19\x64\xd0\xf7\xef\x12\x9e\xd2\x3b\x28\x8d\x0c\x21\x67\xb1\x46\x52\x5b\xf4\xe3\xc5\x44\x61\x2c\x8b\xdf\xdc\x0a\x14\x92\xd4\x06\xd6\xce\x83\x90\x63\x05\x78\x40\x1f\x8b\xc8\xbb\x2e\xfb\x6c\xd5\xb5\xd3\x96\xfa\x9e\x15\x27\xa6\xe0\xb2\x10\xbc\x5a\x4e\x09\x7f\x41\x8b\x5e\x12\xaa\x48\x69\xdd\x3e\x72\xa4\x99\xae\x83\xbd\xa6\x0a\xa2\xe2\x8e\xde\x39\x9e\x77\xfb\x7b\xb0\x73\x70\xb3\x08\xf5\xe2\x47\x56\x44\xa9\x0a\xae\xf4\xee\xd9\xc0\x0f\x03\xe5\x24\xeb\x59\xf4\x68\xbc\x71\xf3\x8f\xae\xae\xa5\x55\x60\xb4\xc5\x17\x42\x78\x69\x37\x08\xd9\xb8\xf2\x8b\xb6\xd8\xf7\x5d\x97\xf5\x3d\x74\x1d\x5a\xf5\x38\x5e\x32\xde\x08\x79\x1d\x5b\xf6\x2d\x8c\x69\xe1\xeb\x48\x27\x8b\xe4\xca\xe0\x94\x3b\x19\xc3\x77\x11\xc8\xeb\x06\xd5\x9c\x9a\x8e\x8f\xd1\xe4\xf1\x73\x73\x08\x29\xbe\xb6\xd4\xb4\x04\x6b\x6d\x30\x08\x4e\xd5\xc9\x02\x3e\x5f\x11\x67\x4f\x32\x0a\x3a\xf6\xca\x13\x3b\x9c\x18\x5d\x77\xd1\xb6\x5a\xc1\x55\x0e\xa3\x66\xce\x68\x54\x71\x6c\x0a\x8f\x81\xf8\xd6\xad\xf8\xb8\xaa\xef\xf9\x3f\xba\x61\xc5\x8d\x6e\x06\x58\x70\x6b\x90\xc6\x80\xb6\x4d\x4b\x01\xa2\x5c\xdc\x70\x94\x90\x5a\x85\x54\x71\xb6\x79\xba\xfe\x8b\x5b\x3c\xbc\x87\x8b\x9d\x34\x2d\x0e\x24\x3f\x6b\x83\xbf\xcb\xe6\x01\xcc\xd9\x49\x5e\xc0\x17\xb1\xa2\x79\x8b\x87\xd4\xbf\x69\xf4\x90\xe5\xf4\x5e\x13\xdd\x50\xfa\x97\x11\xdf\xe8\xe6\x7f\x07\x2c\xf8\x89\x18\x04\x1f\x64\x59\x3c\xd2\x5b\x8d\xb4\x68\x60\xf8\x2e\x14\xae\x65\x6b\xe8\x89\x5e\x4b\x31\x51\x73\xda\x6e\x58\xf1\xc5\x6d\x9e\x69\xb4\x14\x1c\x19\xd8\x89\x22\x1b\x8f\xf1\x8d\x4a\x32\xff\x83\xbc\xb6\x9b\x78\xc2\xe8\x9e\xc1\xff\xc7\xdb\x30\x9e\x76\xe6\xbb\x8f\x12\x3c\x9d\x5b\xf0\xf4\x27\xe0\xdf\x00\x00\x00\xff\xff\xa6\xb0\x97\x81\x1c\x08\x00\x00")

func templateJobHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateJobHtml,
		"template/job.html",
	)
}

func templateJobHtml() (*asset, error) {
	bytes, err := templateJobHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/job.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateJobsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xcd\x6e\xdb\x30\x0c\xbe\xe7\x29\x38\x9d\x17\x69\x59\x81\x61\x28\x64\x5f\xda\x1e\x36\x0c\x58\x81\xb5\x87\x1d\x15\x8b\x8d\x95\xc9\x92\x27\xd1\x69\x33\xc3\xef\x3e\xc8\x8a\xd3\xb4\x75\x06\x2c\x07\x85\x7f\xfa\x48\x7d\x24\x2d\xdf\x5d\x7f\xbf\xba\xfb\x79\x7b\x03\x35\x35\xb6\x5c\xc8\xfc\x07\x20\x6b\x54\x3a\x09\x00\x92\x0c\x59\x2c\x37\xa1\x73\x04\x5b\xbf\x8e\x52\x64\x4b\xf6\x36\x48\x0a\xaa\x5a\x85\x88\x54\xb0\x8e\x1e\x96\x9f\xd9\xa9\xcb\xa9\x06\x0b\xb6\x33\xf8\xd8\xfa\x40\x0c\x2a\xef\x08\x1d\x15\xec\xd1\x68\xaa\x0b\x8d\x3b\x53\xe1\x72\x54\xde\x83\x71\x86\x8c\xb2\xcb\x58\x29\x8b\xc5\x6a\x02\xb2\xc6\xfd\x82\x80\xb6\x60\x91\xf6\x16\x63\x8d\x48\x0c\xea\x80\x0f\x05\xab\x89\xda\x4b\x21\x1a\xf5\x54\x69\xc7\xd7\xde\x53\xa4\xa0\xda\xa4\x54\xbe\x11\x47\x83\xb8\xe0\x17\xfc\x93\xa8\x62\x7c\xb6\xf1\xc6\x38\x5e\xc5\x38\xe5\x89\x55\x30\x2d\x41\x0c\x55\xc6\x8d\x97\x42\xa8\xad\x7a\xe2\x1b\xef\x37\x16\x55\x6b\xe2\x08\x9a\x6c\xc2\x9a\x75\x14\xdb\xdf\x1d\x86\xbd\x58\xf1\xd5\x47\xfe\xe1\xa0\x8d\xa8\xdb\xc8\x4a\x29\x32\xe0\x19\xf4\xff\xa8\x7a\xfb\xba\xe8\xd7\xf0\x52\x4c\x0d\x93\x6b\xaf\xf7\x39\x63\xdf\x03\x61\xd3\x5a\x45\x08\x6c\x92\xc6\x40\x0c\x3c\x75\x9a\x01\x87\x61\x58\xe4\xf2\xb4\xd9\x41\x65\x55\x8c\x05\x4b\x3d\x52\xc6\x61\x38\x10\x93\xe6\x61\x55\x7e\x1d\x7b\x5f\xaf\xca\xc5\xc1\x78\xd5\x85\x80\x8e\xec\x1e\xfa\xde\xa2\x03\x9e\xa6\x63\x18\xc6\x21\x01\x15\xc1\x3f\xa4\x12\x9c\x7f\x4c\x49\x26\x9c\x20\x8e\x98\xa4\xd6\x16\xa7\x9c\x59\x19\xcf\x65\xa4\x60\x5a\xd4\xc7\xec\x29\xf6\x79\x20\x27\x4b\x38\x55\xc7\x90\xf2\xfe\xfe\xcb\xb5\x14\x54\xbf\xf5\x54\xbe\x69\x94\xd3\x60\x8d\xc3\xf9\x88\x48\x2a\x10\x90\x69\xce\xfb\xa9\x8b\xf3\x3e\x74\x7a\xf6\xa6\x14\xa7\x55\x26\xef\x8b\x57\x48\x7a\x6e\x56\xfe\xf5\x7d\x50\x6e\x83\x13\x95\xff\x7e\xaf\x2e\xa5\x3a\x6c\x81\xd8\xfa\xb5\xe8\x7b\x9e\x08\x18\x06\x56\x1e\x45\x29\x54\x29\x05\xe9\xb7\x77\x53\x6f\x0e\xc9\x6e\xd3\xf6\xea\xab\x4c\xd1\x37\xe3\x70\x18\xa0\xef\xf9\x78\xa2\xd3\xc3\x00\xf3\x10\x7d\x5f\x77\x8d\x72\xe6\x0f\xde\x99\x06\x81\xff\x48\x14\x26\x31\xe5\x9d\xbf\x90\x62\xa8\x8b\xe7\x03\x5e\x22\xde\x38\x3d\x8f\x97\x99\x7d\xc1\xdc\x58\xe9\x29\xd9\xa7\xe4\x4a\x31\x8e\xd6\x61\x15\x85\x36\xbb\xbc\x36\x39\x46\x8a\xfc\xe1\x5b\x2c\xfe\x06\x00\x00\xff\xff\x82\x16\x2f\xd1\x12\x05\x00\x00")

func templateJobsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateJobsHtml,
		"template/jobs.html",
	)
}

func templateJobsHtml() (*asset, error) {
	bytes, err := templateJobsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/jobs.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateServiceHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x6d\x4f\xdc\xb8\x13\x7f\xdf\x4f\x31\x7f\xff\x91\x58\x0e\x62\xb3\x40\x7b\xbd\x36\x59\x1d\x85\xad\xae\x15\x2d\x48\x54\xba\x87\x77\xde\x64\x76\x63\xea\xd8\x39\xdb\x59\xe0\xa2\x7c\xf7\x93\xe3\xec\x43\x28\x50\xa0\x3a\x89\x57\x1b\x7b\xc6\x3f\xff\xe6\xc1\x9e\xf1\xc6\xff\x3b\x3e\x3d\xfa\xf2\xe7\xd9\x18\x72\x57\xc8\xd1\x8b\x38\xfc\x00\xc4\x39\xf2\xcc\x7f\x00\xc4\x4e\x38\x89\xa3\x99\xa9\x94\x83\xba\xa6\x16\xcd\x5c\xa4\x48\xc7\x2a\x3b\xd3\x42\xb9\xa6\x89\x59\x50\x09\xea\x05\x3a\x0e\x69\xce\x8d\x45\x97\x90\xca\x4d\xa3\xd7\x64\x5d\xa4\x78\x81\x09\x99\x0b\xbc\x2c\xb5\x71\x04\x52\xad\x1c\x2a\x97\x90\x4b\x91\xb9\x3c\xc9\xd0\xa3\x47\xed\x60\x07\x84\x12\x4e\x70\x19\xd9\x94\x4b\x4c\x86\x0b\x20\x29\xd4\x57\x30\x28\x13\x62\xdd\xb5\x44\x9b\x23\x3a\x02\xb9\xc1\x69\x42\x72\xe7\xca\x37\x8c\x15\xfc\x2a\xcd\x14\x9d\x68\xed\xac\x33\xbc\xf4\x83\x54\x17\x6c\x39\xc1\xf6\xe9\x3e\x7d\xc5\x52\x6b\x57\x73\xb4\x10\x8a\xa6\xd6\x2e\xf6\xb1\xa9\x11\xa5\x03\x6b\xd2\x80\x6b\xdf\x30\xc6\x2f\xf8\x15\x9d\x69\x3d\x93\xc8\x4b\x61\x5b\x50\x3f\xc7\xa4\x98\x58\x76\xf1\x77\x85\xe6\x9a\x0d\xe9\x70\x8f\xee\x76\xa3\x16\xf5\xc2\x92\x51\xcc\x02\xe0\x1d\xe8\x8f\x60\x7d\x71\x93\xf4\x03\xe0\x3d\xf9\x4a\x95\x5f\x67\x81\xf2\x95\xd0\x96\x65\xc2\xba\xf0\x79\x2b\x4a\xcc\x16\x79\x10\x4f\x74\x76\x1d\x80\xeb\x1a\x1c\x16\xa5\xe4\x0e\x81\x2c\xbe\x5a\x45\x34\xd4\x27\x10\x01\x0a\x4d\xf3\x22\xb0\xc8\xc4\x1c\x52\xc9\xad\x4d\x88\x8f\x34\x17\x0a\x4d\xe7\xde\xbe\xd4\xe8\xcb\xe5\xbc\x4f\xc0\xe1\xe8\x8e\x64\xcb\x87\xcb\xe5\x2c\x13\xf3\xc5\xa0\xae\x61\x23\x85\x37\x09\xd0\x54\xab\xa9\x98\x79\x0a\x4b\xc9\xa5\x70\x39\x2c\xd0\x56\x92\x7b\xf6\xef\xf1\x96\x91\x2d\xa2\x03\x32\x42\x95\x95\x9e\x46\x6f\xe3\x5b\x95\x5f\x13\x4f\x7f\x9d\xf6\xda\x8a\x6e\xf0\x44\x12\xa9\x2e\x0a\xae\x32\x90\x42\xe1\x03\x89\x18\xae\x66\x08\xf4\x28\xac\x3c\x11\x0a\x9b\xa6\xae\x69\xd3\x40\x5d\xa3\xca\x6e\xa7\x17\x06\x4f\x24\x99\x61\xc8\x22\xa1\xd5\x03\x39\x42\xc1\xcd\xd7\x4c\x5f\x2a\xa0\xc7\xab\xc5\xf0\x54\xd7\xe5\xfb\xa3\x23\x2e\xa5\x50\xb3\x10\xfc\xb4\x32\x32\x66\xf9\xfe\x4a\xc5\x27\x4c\xd6\x26\xcc\x31\x4e\x79\x25\x9d\x5d\x25\x46\x1f\xfa\x12\xa5\x5c\xc3\x86\x16\x0c\xa2\x3f\xe0\xec\xf4\xfc\x8b\xc7\x09\xfe\xdd\x28\x5b\xb4\x33\x6e\x78\x81\x0e\x8d\x6d\x1a\x88\xa2\xa9\x36\x45\xbb\x57\x09\x4d\x93\x90\xba\x16\x2a\xc3\x2b\xbf\xf5\x46\xd9\x34\xa4\x0b\xc0\x1a\xf8\x4d\xbc\x0f\xaa\xac\xdc\x7b\x21\xd1\xf3\x5b\x01\xfa\xd5\xc9\xaf\xef\x3f\x9c\x8c\x3f\x1f\x7e\x1a\xc3\xf7\x71\x4e\x2b\x77\x37\x90\x6e\x85\xf4\x11\x70\x2d\xad\xbf\x44\x79\x0f\x29\xfa\x8f\x28\x1f\x4c\xec\x56\xa8\x8e\xd6\x9d\x38\x1b\x29\x3d\x47\x33\x47\x03\x4d\xc3\x0c\x5a\xc7\xba\x33\xce\x7a\xa7\x6f\x15\xd5\x27\xe5\x52\xcb\x28\xd4\xad\x0e\x9e\x40\x81\x2e\xd7\x59\x42\x4a\x6d\x1d\x01\x54\xa9\xbb\x2e\x31\x21\x45\x25\x9d\x28\xb9\x71\xcc\x2f\x8a\x32\xee\x78\x2f\x73\xee\x4b\x96\x35\xb5\x75\x32\x2d\xd0\xcc\xe8\xaa\xec\x21\xf9\x32\xc8\x27\x28\x61\xaa\x8d\x4f\xab\x36\x9b\x46\xe1\x37\x66\xad\xe8\x86\xba\xf0\x11\xeb\xa1\xfa\x1b\xd9\x68\x49\x40\x64\x4b\x08\x28\x25\x4f\x31\xd7\x32\x43\xf3\x6d\xba\x42\x30\xd3\xe1\x95\x23\x9d\x4b\x16\x5b\xdf\x12\xa1\x1b\x47\xff\x3b\xb9\xfd\x4c\xec\x0f\x16\x4e\x85\xc4\x9b\x16\xde\x6f\xd9\xe3\xce\xdf\xb3\x32\xf6\xb6\x70\xfe\x98\xb1\x6b\xb7\xc3\xb3\xb2\xf4\xbf\x0a\xeb\x33\x34\xf5\xc7\x83\x1a\x97\xa3\x78\x52\x39\xa7\x55\x07\x69\xab\x49\x21\x7c\xcf\x1e\x18\x4c\x9c\x82\x89\x53\x51\x16\xea\x27\x19\x9d\xb7\xf2\x98\x85\x45\x6b\x37\x68\x7b\x1b\xde\xd5\xb6\xa1\xca\xee\x6e\xc9\x5a\xc3\x42\x19\x88\x5e\x0f\x7f\xde\x1f\xee\xbe\x3b\x8e\x0e\xf6\x0e\x5f\x45\x07\xc7\x47\x07\xd1\xe1\xc1\xcb\xc3\xe8\x97\xfd\xbd\xf1\xbb\x97\x7b\xc3\xfd\xf1\xc1\x98\xb0\xae\xfd\xed\x2e\xf7\x5e\x2f\xbc\x72\x0c\xbb\xe0\x73\x1e\x66\x49\x57\x02\xe6\xdc\x40\x7b\xd3\x27\x90\xe9\xb4\x2a\x50\x39\xea\xc7\x96\x7a\x1f\x66\x1f\x1c\x16\x83\xe5\xfd\xbf\xf5\xb6\x5d\xe3\xe5\x94\x67\xd9\x78\x8e\xca\x9d\x08\xeb\x50\xa1\x19\x6c\x06\x3f\x6d\xee\xc0\xb4\x52\xa9\x6f\x63\x06\x38\xdf\x82\x7a\x51\x6a\xfc\x4e\x3a\xe4\xcd\xfa\x66\xed\x63\xe1\x1c\x25\xa6\x4e\x9b\x01\xf9\xff\x63\xac\xde\xda\x59\x8b\x9b\x3e\xe6\x8e\x43\x02\x0a\x2f\xe1\xbd\x36\x85\x1f\x0e\x3c\xd5\x8e\x35\x00\x63\xf0\x3b\x17\x0e\x38\x4c\x2b\x29\xa1\x10\xaa\x72\xe8\xad\x01\x27\x0a\xd4\x95\xeb\xf4\xc2\xd3\xa0\x8b\xaf\xa5\x9d\x10\x12\x78\xb5\x0b\x3f\xc1\x70\x77\x77\xf7\x6d\x4f\xd3\x57\xc3\xc1\xe2\x31\x53\xd7\xcb\xf2\x7c\x4b\x75\xfe\xb6\xb5\x27\x3b\x81\xf9\xd6\x7a\xd2\x53\x97\xa3\x1a\x2c\xfd\x68\xd0\x96\x5a\x59\xf4\xde\x5c\x3f\x1a\xfe\x19\x69\xb5\x44\x2a\xf5\x6c\xa5\xf4\xb6\xaf\xd3\xf9\x9c\x0a\xa5\xd0\xfc\xf6\xe5\xd3\x09\x24\x7d\x05\x80\xcd\x78\x62\xd8\x28\xe6\xdd\x63\x92\x5d\xe8\x09\xdb\x84\x6d\x58\x40\x52\x5f\xd1\x69\x55\x89\x0c\xb6\x61\x93\x8c\x3e\xea\x09\x58\xc7\x5d\x65\x63\xc6\x47\x9b\xb0\x7d\x13\x90\xc4\xa5\xc1\x11\x81\x6d\xf8\x78\x7e\xfa\x99\x5a\x67\x84\x9a\x89\xe9\xf5\xa0\x87\xb8\xa3\x2a\x29\x77\x0e\xb6\x60\x1b\x48\xcc\xda\x15\x3d\xee\x4d\xdf\x27\x29\x77\x69\xbe\x72\x0a\x1a\xa3\xcd\x56\xfd\x5d\x63\x81\xf8\xb6\x78\xec\xb5\xdb\x56\xb8\xb5\xd5\x53\x6b\x01\x6e\x6c\xb8\x18\xe2\x9c\x96\x06\x7d\x7e\x77\x6d\xf2\xa0\x13\x35\x3b\x30\xe5\x72\xe9\xe5\xfe\xbb\x31\x3c\x17\x63\x16\xfe\x50\xf8\x37\x00\x00\xff\xff\x39\x24\x55\x99\x68\x10\x00\x00")

func templateServiceHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateServiceHtml,
		"template/service.html",
	)
}

func templateServiceHtml() (*asset, error) {
	bytes, err := templateServiceHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/service.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateServicesHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xcd\x6e\xdb\x3c\x10\xbc\xe7\x29\xf6\x23\x72\x4c\xc8\xcf\x0d\xd0\x43\x40\xe9\x92\xe4\x56\xa0\x01\xda\x4b\x8f\xb4\xb8\xb1\xe8\x50\xa4\x4a\xae\x1d\x1b\x82\xde\xbd\xa0\x28\xc9\xbf\x29\x50\x1f\x6c\xee\xee\x70\x38\xdc\x59\x5a\xfe\xf7\xfc\xfd\xe9\xe7\xaf\xd7\x17\xa8\xa9\xb1\xe5\x8d\xcc\x3f\x00\xb2\x46\xa5\xd3\x02\x40\x92\x21\x8b\xe5\x2a\x6c\x1c\x41\xc4\xb0\x35\x15\x46\x29\x72\x36\x23\x1a\x24\x05\x4e\x35\x58\xb0\xad\xc1\x8f\xd6\x07\x62\x50\x79\x47\xe8\xa8\x60\x1f\x46\x53\x5d\x68\x4c\x1b\xef\x87\xe0\x0e\x8c\x33\x64\x94\xbd\x8f\x95\xb2\x58\x2c\xd8\x48\x64\x8d\x7b\x87\x80\xb6\x60\x91\xf6\x16\x63\x8d\x48\x0c\xea\x80\x6f\x05\xab\x89\xda\x47\x21\x1a\xb5\xab\xb4\xe3\x4b\xef\x29\x52\x50\x6d\x0a\x2a\xdf\x88\x39\x21\x1e\xf8\x03\xff\x2a\xaa\x18\x0f\x39\xde\x18\xc7\xab\x18\xa7\x73\x62\x15\x4c\x4b\x10\x43\x95\x79\xe3\xa3\x10\x6a\xad\x76\x7c\xe5\xfd\xca\xa2\x6a\x4d\x1c\x48\x53\x4e\x58\xb3\x8c\x62\xfd\x7b\x83\x61\x2f\x16\x7c\xf1\x85\xff\x3f\x46\x03\xeb\x3a\xb2\x52\x8a\x4c\xf8\x09\xfb\x3f\xa8\x5e\x9f\x8b\x3e\xa7\x97\x62\x72\x46\x2e\xbd\xde\xe7\x13\xbb\x0e\x08\x9b\xd6\x2a\x42\x60\xd3\x6a\x00\x62\xe0\xc9\x52\x06\x1c\xfa\x7e\xc0\x66\x89\xda\x6c\xa1\xb2\x2a\xc6\x82\x25\x9f\x94\x71\x18\xc6\xe6\x24\xf3\x17\xe5\x8f\xd9\xe8\x7a\x51\xde\x8c\x85\xa7\x4d\x08\xe8\xc8\xee\xa1\xeb\x2c\x3a\xe0\xd3\x38\xf4\xfd\x3c\x19\xa0\xb6\xca\x58\xb5\xb4\x38\xb3\x05\x31\x33\x53\x2a\x4c\x27\xe7\x60\xf8\xbe\x8f\x14\x4c\x8b\x7a\xd6\x90\xb0\x87\x19\x9c\x32\xe1\x38\x1c\x20\x25\x3a\xdd\x7a\xe3\x48\x0a\xaa\x2f\xab\x95\x6f\x1a\xe5\x34\x58\xe3\xf0\x3a\x42\x63\x6e\xae\xf1\xee\x33\xc0\x9b\xda\x58\x8a\xe7\x55\x29\x8e\xe5\xa4\xea\x20\xf7\x48\xff\xc1\xa0\xfc\xe9\xba\xa0\xdc\x0a\x8f\xdb\xf6\xf7\xdb\xe9\x52\xaa\x71\xfa\xc7\x2d\xa2\xeb\xf8\x8b\xd3\xaf\xe9\xc6\x7d\xcf\xca\x93\x50\x0a\x55\x4a\x41\xfa\x92\xe6\x24\x31\xcc\x4b\x56\x72\x6b\x9c\xc6\xdd\x1d\xdc\xa2\xc5\x06\x1d\xc1\x63\x01\xfc\x29\xf7\xec\x9b\x71\x78\x22\x30\xef\x9c\xa0\x57\x4a\xe8\xf4\x59\xf6\xba\x9a\xae\x6b\x54\x78\xd7\xfe\xc3\x01\x7f\x3e\xb4\x3f\x5d\xe0\x3a\x7c\x1d\xfd\x00\xcd\x46\x5c\xe2\x4e\xad\x18\x67\xfc\xba\x2a\x29\x4e\x6c\x91\x62\x18\xbf\xf1\xe1\x0a\x6d\xb6\xf9\x91\x65\x8c\x14\xf9\xff\xf0\x4f\x00\x00\x00\xff\xff\x4b\xc3\x31\x0c\x27\x05\x00\x00")

func templateServicesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateServicesHtml,
		"template/services.html",
	)
}

func templateServicesHtml() (*asset, error) {
	bytes, err := templateServicesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/services.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMdReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x6d\x73\xdb\xc6\x11\xfe\x8e\x5f\xb1\x13\x76\xa6\x52\x46\x20\x25\x8f\x1a\xd9\x1a\x2b\x13\x5b\x71\x6c\x75\x6c\x37\xb5\x94\xbe\x4c\xa7\x2d\x0e\xb8\x05\x70\xd2\xe1\x16\xbe\x17\x52\x74\x98\xfe\xf6\xce\x1e\x00\x12\x14\x2d\x59\xd3\xe6\x43\xf8\x81\xa2\xee\x70\xbb\xcf\x3e\xfb\xdc\xee\x62\x02\xaf\x6d\x30\x3e\x49\xe2\x1f\x50\x0e\x04\xbc\x26\x70\x68\xe7\x68\xc1\xd7\xc2\x03\xde\xb6\xe4\x90\x37\x3e\xbc\xba\xbc\x02\x65\x3c\xda\x52\x14\x08\x9e\xa0\xa0\xa6\x11\x46\x82\x56\x06\xa1\xb5\x54\x59\xd1\xb8\x29\xc0\xda\x5a\x41\xa6\x54\x55\xb0\x28\xc1\xd7\x96\x42\x55\x83\x00\xa7\x9a\x56\x23\xfc\xfd\xdd\x5b\x28\x95\xc6\x69\x92\x4c\x26\xf0\x32\x28\x2d\x93\xe4\xc2\x80\xaf\x11\x16\x4a\x4b\x08\x0e\x4f\x93\x24\xcb\x32\xc8\x85\xab\x93\x8a\xa0\x42\x0f\x95\xf2\x75\xc8\xa7\x05\x35\xb3\x77\x62\x49\xe9\x9f\x2f\xde\xcf\xaa\x18\x44\x96\x65\xd1\x80\x80\x42\x93\x41\xa0\x32\xda\xb2\xd8\x12\xec\xdd\x04\x49\x8e\x31\xf3\x52\xc9\x78\xff\xf1\x06\xb5\xa6\x8a\xda\x1a\xed\x3f\xf7\x6a\xef\x5b\x77\x3a\x9b\x8d\xcc\x17\x9a\x82\x2c\xb5\xb0\x38\xab\x37\x8f\xee\xef\x8f\x41\x35\xe2\x06\x3b\xc7\x93\x09\x7c\x08\x26\x49\xb2\x08\x06\xe2\x77\x0c\x6f\xd9\xe8\x2c\x49\x3e\x04\xd3\xad\x01\x19\x68\xc9\x7a\xc8\x9e\x3d\x3b\x3c\xca\x60\x8f\x01\x49\x2c\x45\xd0\x1e\xb4\x72\x1e\x8d\x32\x55\x7c\x64\xbf\xa3\xe6\x07\x61\x8a\x25\x48\x6c\x28\x3a\x8e\x7e\x7b\xc2\x62\x34\x9d\x59\x49\xc5\x0d\xda\xa4\xfb\x03\x79\xdc\x4d\x7b\x1c\xc0\x86\x22\xbc\x7e\xdb\x06\x03\xa9\x84\xb4\x05\x06\x71\xca\x5f\x30\x22\xf1\xbc\xc6\xe2\x66\x64\x7b\x81\xf9\x28\xf1\x4c\xd5\xe9\x6c\xa6\xa9\x10\xba\x26\xe7\xe3\xf1\x8e\x00\x56\xc8\x2b\x23\x5b\x52\xc6\xbb\x24\x59\x01\xf6\xff\xc0\x7d\x9f\x15\x34\xe8\x6b\x92\xb0\x82\x56\x58\xd1\xa0\x47\xeb\xd6\x7b\x12\x5d\x61\x55\xeb\x15\x99\x7b\x2d\xdc\x6b\x39\x59\xa5\x5f\xfc\xac\x76\x7e\x7c\x66\xef\x7f\xfa\xac\x92\x15\x64\x33\x8b\xce\xcf\xf8\x3a\xa9\x02\xb3\xcf\x45\xff\xfa\xd5\x55\xf7\x23\x4d\x77\xf6\xde\x2a\xe7\x63\x16\x7a\x03\x0e\xc4\x5c\x28\x2d\x72\x8d\x8f\x89\xfe\x8e\xfb\xd9\xcf\x4a\xfe\x92\xdd\xe7\x3e\x53\xf2\xee\xde\xf7\xe8\x85\xd2\x50\x92\x1d\x00\xec\x3e\xf5\x7f\xba\xff\xf1\x4f\x97\x57\xf7\xb9\xbf\xf4\xc2\x7a\x10\x60\x70\x01\x7f\xa4\x1c\x82\xe3\x7b\xf1\x38\x24\x23\xf7\xd7\x94\x7f\xc6\xf5\x63\xa3\x77\x20\x72\x0a\x0c\x83\x21\x3c\xf6\x73\xc7\xfd\x42\x28\xbf\x8b\xe1\x0b\xee\x09\x1d\x18\xf2\x60\xd1\x07\x6b\x20\x18\xaf\x74\x14\x03\x03\x29\x88\x4b\xa8\x47\xf7\xd8\xe8\x67\x5c\x8a\x66\x3f\xf3\xb7\x11\x0d\xfe\x92\xdd\x75\x7f\x00\xd9\xb0\xc9\x7b\x1f\xd0\x5b\x85\x73\xec\xcb\xa5\xc6\xf1\x76\x69\xa9\x59\x43\x71\x2d\x16\xaa\x54\x28\x21\x5f\x76\x81\xac\x62\x2d\x38\xef\x4b\xbf\xe0\xcb\x9b\x24\x2f\x0c\xe0\xad\x88\x85\xbf\x18\xef\x70\x97\x28\x29\x18\x09\xca\x40\xb6\x5d\x35\xa7\xf0\x62\x9d\xef\x82\x8c\x53\xce\xbb\xa1\xaa\x97\xa4\x35\x2d\x58\x11\xa5\x42\x2d\x5d\x57\x94\x13\x34\xf2\xc7\x4d\xbd\x49\xd3\xae\x24\x0d\x55\xe8\x00\x70\x5a\x4d\x61\x5b\x97\xcf\x87\x33\xdf\x26\x7d\x3f\x7b\xcb\xed\x21\x9e\x3e\x1f\x37\x38\x4f\x5c\x37\x93\x1d\xba\x2f\xa9\xc1\x8e\x06\xa1\xef\xb4\xc4\x4d\x45\x13\x16\x77\x4f\x4e\xe6\x42\x07\x8c\x9e\x2c\xb6\x3a\x76\xd5\x9a\x9b\xb0\xad\x42\x83\x5c\x78\x95\xaf\x63\xb8\x6b\x4b\x1b\xf2\xf9\xee\xec\x9a\x7c\xae\xcc\x10\xba\x26\xba\x89\xb7\x57\x18\x08\xad\x26\x21\x51\xc6\x5c\xee\x9e\xfa\x96\x35\xde\x9d\x8a\xde\x2c\x15\xe8\x1c\xb7\x61\x0d\x15\x1a\xb4\xc2\xf7\xd0\xa2\x16\xd8\xa8\x16\x8c\x46\xd2\xc2\xb0\xe5\x5d\x93\xff\xda\x00\xd9\x72\x0e\x4d\x70\x1e\x72\x04\x01\x9f\x54\x1b\x97\x0e\x00\x6f\xbd\x15\x85\x67\x0d\x08\x90\xca\x62\xe1\xc9\x2e\x61\xaf\x10\x5a\x23\x4b\x63\x1f\x98\xd4\x56\x38\x37\xda\x66\x35\x82\x70\x1c\xdf\xc0\xd8\x2e\x8e\xff\x6c\x42\xeb\xa4\xba\x04\x5e\xa1\x6e\xd0\xd8\x4a\x17\x9b\xda\x98\x3f\x88\xf8\x0a\x32\x1e\x8d\x77\x31\xe6\x75\xb4\xdb\x7d\x29\x4d\xb7\x1a\x55\xaf\xd0\x41\x74\x49\xdf\xdc\xdd\x5a\x93\x02\x6a\xe1\xea\x46\xb4\xfc\xe8\xd0\xfa\xa3\x14\x3a\x37\x5f\x75\xba\xf8\x6a\xa4\x9f\xf5\x8c\x71\x4e\xed\x12\x5e\x75\x37\x29\x49\xae\xd8\x4f\x7f\xad\xba\x5b\xba\x7d\x83\xd6\xd3\x9b\x63\x8d\x0e\x88\xdc\x14\x32\x8f\xce\x67\xdd\x28\xb6\x04\x2c\x6a\x2e\x37\x8c\x5a\x99\x96\xcb\x9d\x91\x50\x08\xc3\x69\xea\x53\xa0\xd5\x4d\xa7\x80\xfe\xa2\x15\xc1\x6a\x48\xff\xd6\x57\xf0\x74\x0e\x69\x5a\x92\x6d\xe0\x1d\x3a\x27\x2a\x3c\xab\x15\x8c\x07\x84\x67\x47\xdb\x97\x8e\xdd\x77\x31\x15\x1c\x90\x17\x37\xe8\x46\xbe\x29\x78\xfe\xc9\x71\xf0\x3c\x99\x3d\x57\x26\x5b\x0b\xa7\xb5\x34\x57\x12\xe5\xc3\x40\x94\x39\xfb\x2e\x57\xd5\xbf\x23\x17\xfe\xd6\x0f\xeb\x14\xfc\x99\x6b\x84\xd6\x9b\x9d\xed\x49\x66\x1b\x28\xc3\xeb\x80\xbe\x7f\x79\x0a\xd9\x3d\xc6\x33\x50\x46\xaa\x42\xf8\xc8\xa2\xf0\x10\x51\xb9\x9a\x82\x96\xe0\xd0\x48\xd8\x82\x22\x5c\x5f\xc3\x6c\x33\xba\xd9\x99\x32\x59\xc2\xd1\xf3\xde\x88\x81\x28\x73\xe5\xc0\xa1\xe7\x1a\x94\x6d\xa3\xcf\x92\x64\xbb\x1e\x0e\x7a\xd0\x38\x47\x2b\xaa\x3e\xaf\x4e\xab\x02\xed\xef\x1d\x9c\xbf\xbd\x80\xdb\x46\x6f\x46\xf3\xbe\x40\x3f\xc4\xa5\x41\x55\xd5\x39\xd9\x9a\x48\x9e\x1d\x1d\x1c\x1d\x1c\x6d\x58\x6e\x83\xff\x0b\xe9\xd0\xe0\xd9\x77\x2c\xb2\x08\xcb\x28\x35\xad\x3e\x8d\x18\xdf\x3c\x74\xf7\x99\x87\xb8\x7f\x87\x52\x09\x73\xd1\x88\x0a\x7f\x50\xda\xa3\xed\x50\x72\x1d\x1e\xb7\xa7\x9e\x2a\x29\xbc\x38\x80\x52\x59\xc7\xb4\xf5\x34\xfe\xf4\xd3\xc5\xf7\x5c\x55\xba\x17\x01\xd7\x92\x71\x78\x10\x25\x66\xf1\x63\xc0\x7e\xbe\x8a\x45\x31\xda\x5e\xf0\x2b\xc6\xe7\x30\x71\x23\x45\x91\x1f\x8b\xfc\xf0\x24\x2d\x9e\x96\x27\xe9\xf1\x71\x79\x92\xe6\x27\xf2\x69\xfa\xf4\x44\xe6\xf2\xe4\xc9\x93\x6f\x50\x1c\x77\x8d\x96\x42\xaf\xee\xaf\xdf\xbf\x3c\xfd\x1a\x16\xb8\xe5\x6e\x94\xdb\x7e\xaa\xe1\xd5\x8c\x82\xcf\x36\x72\x38\x88\xdd\x7f\x40\x17\x35\xb0\x31\xc3\xe2\x7f\x83\x36\xca\xa2\x2b\x63\xed\x72\x9d\xf8\xce\xe4\xf5\xc7\xbd\x7e\x50\xe7\xc7\x49\x0b\x33\xed\xdf\x6d\x14\xcd\xae\x3f\xce\xf6\x59\x4b\x35\xea\x16\x04\xe4\xca\x77\xe1\x2b\x79\x96\x75\x22\x48\x1d\x7b\xf5\x6b\x35\xfc\xfa\xb7\x0a\x56\x70\xfd\x11\x52\x0b\xd3\x10\x94\xec\xa9\x4f\xd3\xbe\xe0\xa6\x52\xb9\x96\x9c\x8a\x15\xf5\xbe\x84\xfc\x4e\xc9\x3b\x7c\x4f\x26\x91\x8b\x54\x2a\x3b\xf0\x31\x7e\x69\x7a\x23\xe6\xe3\xc6\x33\x14\xb7\x58\x0d\xa7\x9f\x54\x9b\x0d\x5a\x29\x82\xb5\x1c\xfe\xba\x1b\x24\x93\x7e\x20\xe5\xdd\x6b\xca\xa3\x86\x86\xb6\xc5\x6b\x1c\xc4\x9a\xfa\xc7\x11\x39\x78\x1d\x93\x48\xa1\x5b\xfa\x12\x7b\x31\xc2\x3b\x0c\x76\x18\x7d\x58\x0f\x49\xd7\x94\xf7\x77\x7a\xfe\x10\x87\x7c\xf0\xaf\x42\xf9\xd8\x7c\x86\xf8\xba\xd7\xfb\x38\x65\x7e\xd1\x46\x1c\x70\xd9\x50\xcc\x01\x27\xe1\x52\x23\xb6\x9b\x0c\x5c\xf1\xe8\xa0\x62\xa7\x1e\x54\x4a\x25\x4f\x53\x66\xad\x7e\xc7\x27\xb2\xe8\x9a\x61\x1c\x3d\x39\x04\x87\x05\x19\xe9\xa6\xe3\x0c\xfe\xaa\x49\xe8\x1d\x9c\xb1\xb3\x87\x08\x8f\xd8\x7e\xa3\x6c\x4f\x26\xf0\xa2\xb8\x31\xb4\xd0\x28\x2b\x8c\x53\x63\x92\x5c\x86\xb6\x25\xeb\xbb\xa1\x9c\x7d\xbc\x3f\xbf\x80\xd7\x56\x18\x0f\xe7\x2f\x8e\xbe\x39\x3c\x3c\xfe\xc3\x34\xf9\x6f\x00\x00\x00\xff\xff\xaf\xe0\xa3\x80\xfd\x11\x00\x00")

func readmeMdReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMdReadmeMd,
		"README.md/README.md",
	)
}

func readmeMdReadmeMd() (*asset, error) {
	bytes, err := readmeMdReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/email.txt": templateEmailTxt,
	"template/grunt.html": templateGruntHtml,
	"template/header.html": templateHeaderHtml,
	"template/help.html": templateHelpHtml,
	"template/job.html": templateJobHtml,
	"template/jobs.html": templateJobsHtml,
	"template/service.html": templateServiceHtml,
	"template/services.html": templateServicesHtml,
	"README.md/README.md": readmeMdReadmeMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{readmeMdReadmeMd, map[string]*bintree{}},
	}},
	"template": &bintree{nil, map[string]*bintree{
		"email.txt": &bintree{templateEmailTxt, map[string]*bintree{}},
		"grunt.html": &bintree{templateGruntHtml, map[string]*bintree{}},
		"header.html": &bintree{templateHeaderHtml, map[string]*bintree{}},
		"help.html": &bintree{templateHelpHtml, map[string]*bintree{}},
		"job.html": &bintree{templateJobHtml, map[string]*bintree{}},
		"jobs.html": &bintree{templateJobsHtml, map[string]*bintree{}},
		"service.html": &bintree{templateServiceHtml, map[string]*bintree{}},
		"services.html": &bintree{templateServicesHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

